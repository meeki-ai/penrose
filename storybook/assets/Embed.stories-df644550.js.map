{"version":3,"file":"Embed.stories-df644550.js","sources":["../../src/Embed.tsx"],"sourcesContent":["import React, { CSSProperties } from \"react\";\nimport { Simple, SimpleProps } from \"./Simple.js\";\nimport Logo from \"./icons/Logo.js\";\nimport Resample from \"./icons/Resample.js\";\n\nconst footerStyle: CSSProperties = {\n  display: \"flex\",\n  overflow: \"hidden\",\n  justifyContent: \"space-between\",\n  padding: \"0 1em\",\n  alignItems: \"center\",\n  backgroundColor: \"#40b4f7\",\n  borderRadius: \"0 0 9px 9px\",\n};\n\nconst containerStyle: CSSProperties = {\n  position: \"relative\",\n  borderRadius: \"10px\",\n  border: \"0.5px solid rgba(0, 0, 0, 0.2)\",\n  boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.2)\",\n  overflow: \"hidden\",\n};\n\nconst textStyle: CSSProperties = {\n  fontFamily: '\"Open Sans\", sans-serif',\n  color: \"white\",\n  margin: \"0.7em\",\n  fontWeight: \"lighter\",\n  fontSize: \"smaller\",\n};\n\nconst Heart = () => (\n  <span role=\"img\" aria-label=\"heart\">\n    ðŸ’œ\n  </span>\n);\n\ninterface EmbedState {\n  variation: string;\n}\n\n// variation from SimpleProps is just the initial variation; the actual\n// variation is stored in state, can be changed by resampling\nclass Embed extends React.Component<SimpleProps, EmbedState> {\n  constructor(props: SimpleProps) {\n    super(props);\n    this.state = { variation: props.variation };\n  }\n\n  resample = () => {\n    this.setState({ variation: Math.random().toString() });\n  };\n\n  render = () => {\n    return (\n      <div className=\"embed-container\" style={containerStyle}>\n        <Simple\n          name={\"embed\"}\n          domain={this.props.domain}\n          substance={this.props.substance}\n          style={this.props.style}\n          variation={this.state.variation}\n          interactive={this.props.interactive}\n          excludeWarnings={[]}\n        />\n        <div style={{ width: \"100%\", height: \"100%\" }} />\n        <div className=\"embed-footer\" style={footerStyle}>\n          <a href=\"https://penrose.cs.cmu.edu/\">\n            <Logo width={24} color={\"white\"} />\n          </a>\n          <div className=\"embed-text\" style={textStyle}>\n            Generated by Penrose with <Heart />\n          </div>\n          <div onClick={this.resample}>\n            <Resample size={24} color={\"white\"} />\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport { Embed };\n"],"names":["footerStyle","containerStyle","textStyle","Heart","__name","_jsx","Embed","React","props","variation","_jsxs","domain","substance","style","interactive","Logo","resample"],"mappings":"gYAKA,MAAAA,EAAA,CAAmC,QAAA,OACxB,SAAA,SACC,eAAA,gBACM,QAAA,QACP,WAAA,SACG,gBAAA,UACK,aAAA,aAEnB,EAEAC,EAAA,CAAsC,SAAA,WAC1B,aAAA,OACI,OAAA,iCACN,UAAA,iCACG,SAAA,QAEb,EAEAC,EAAA,CAAiC,WAAA,0BACnB,MAAA,QACL,OAAA,QACC,WAAA,UACI,SAAA,SAEd,EAEAC,EAAAC,EAAA,IAAAC,EAAA,OAAA,CACE,KAAA,MAAW,aAAA,QAAiB,SAAA,IAE5B,CAAA,EAHF,SAYA,MAAAC,UAAAC,EAAA,SAAA,CAA6D,YAAAC,EAAA,CAEzD,MAAAA,CAAA,EACA,KAAA,MAAA,CAAa,UAAAA,EAAA,SAAmBC,CAAU,CAC5C,SAAA,IAAA,CAGE,KAAA,SAAA,CAAc,UAAA,KAAA,OAAA,EAAA,SAAA,CAAoC,CAAA,CAAG,EACvD,OAAA,IAGEC,EAAA,MAAA,CACE,UAAA,kBAAe,MAAAT,EAAyBA,SAAAA,CAAAA,EAAAA,EAAAA,CAC/B,KAAA,QACC,OAAA,KAAA,MAAA,OACaU,UAAAA,KAAAA,MAAAA,UACGC,MAAAA,KAAAA,MAAAA,MACJC,UAAAA,KAAAA,MAAAA,UACIJ,YAAAA,KAAAA,MAAAA,YACEK,gBAAAA,CAAAA,CACP,CAAA,EAAAT,EAAA,MAAA,CAEnB,MAAA,CAAY,MAAA,OAAS,OAAA,MAAgB,CAAO,CAAA,EAAAK,EAAA,MAAA,CAC5C,UAAA,eAAe,MAAAV,EAAsBA,SAAAA,CAAAA,EAAAA,IAAAA,CACnC,KAAA,8BAAQ,SAAAK,EAAAU,EAAA,CACD,MAAA,GAAQ,MAAA,OAAW,CAAA,CAAU,CAAA,EAAAL,EAAA,MAAA,CAEpC,UAAA,aAAe,MAAAR,EAAoBA,SAAAA,CAAAA,6BAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CACE,CAAA,EAAAG,EAAA,MAAA,CAErC,QAAA,KAAA,SAAmBW,SAAAA,EAAAA,EAAAA,CACR,KAAA,GAAO,MAAA,OAAW,CAAA,CAAU,CAAA,CAAA,CACjC,CAAA,CAAA,CACF,CAAA,CAId,CArCAZ,EAAAE,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}